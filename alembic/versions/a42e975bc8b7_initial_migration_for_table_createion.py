"""initial migration for table createion

Revision ID: a42e975bc8b7
Revises: 
Create Date: 2025-06-25 10:39:14.083750

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a42e975bc8b7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_configuration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_account_configuration_id'), 'account_configuration', ['id'], unique=False)
    op.create_table('credit_configuration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('standard_name', sa.String(), nullable=False),
    sa.Column('monthly_credit', sa.Integer(), nullable=False),
    sa.Column('margin_up_to', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('standard_name')
    )
    op.create_index(op.f('ix_credit_configuration_id'), 'credit_configuration', ['id'], unique=False)
    op.create_table('templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('context', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_templates_id'), 'templates', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('SUPERADMIN', 'ADMIN', 'SCHOOL', 'TEACHER', 'STUDENT', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index('uq_school_name_location', 'users', ['name', 'location'], unique=True, postgresql_where=sa.text("role = 'SCHOOL'"))
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    op.create_table('otps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otps_id'), 'otps', ['id'], unique=False)
    op.create_table('schools',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('school_name', sa.String(), nullable=False),
    sa.Column('school_type', sa.Enum('PVT', 'GOVT', 'SEMI_GOVT', 'INTERNATIONAL', name='schooltype'), nullable=True),
    sa.Column('school_medium', sa.Enum('ENGLISH', 'HINDI', 'BILINGUAL', 'OTHER', name='schoolmedium'), nullable=True),
    sa.Column('school_board', sa.Enum('CBSE', 'ICSE', 'STATE', 'IB', 'OTHER', name='schoolboard'), nullable=True),
    sa.Column('establishment_year', sa.Integer(), nullable=True),
    sa.Column('profile_pic_url', sa.String(), nullable=True),
    sa.Column('banner_pic_url', sa.String(), nullable=True),
    sa.Column('pin_code', sa.String(length=10), nullable=True),
    sa.Column('block_division', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('school_email', sa.String(), nullable=False),
    sa.Column('school_phone', sa.String(length=15), nullable=False),
    sa.Column('school_alt_phone', sa.String(length=15), nullable=True),
    sa.Column('school_website', sa.String(), nullable=True),
    sa.Column('principal_name', sa.String(), nullable=True),
    sa.Column('principal_designation', sa.String(), nullable=True),
    sa.Column('principal_email', sa.String(), nullable=True),
    sa.Column('principal_phone', sa.String(length=15), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=True)
    op.create_table('classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'school_id', name='uq_class_name_school')
    )
    op.create_index(op.f('ix_classes_id'), 'classes', ['id'], unique=False)
    op.create_table('credit_master',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('available_credit', sa.Integer(), nullable=True),
    sa.Column('used_credit', sa.Integer(), nullable=True),
    sa.Column('transfer_credit', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_credit_master_id'), 'credit_master', ['id'], unique=False)
    op.create_table('extra_curricular_activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extra_curricular_activities_id'), 'extra_curricular_activities', ['id'], unique=False)
    op.create_table('sections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sections_id'), 'sections', ['id'], unique=False)
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_table('teachers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('highest_qualification', sa.String(), nullable=False),
    sa.Column('university', sa.String(), nullable=False),
    sa.Column('phone', sa.String(length=10), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('teacher_in_classes', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('subjects', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('start_duty', sa.Time(), nullable=False),
    sa.Column('end_duty', sa.Time(), nullable=False),
    sa.Column('teacher_type', sa.Enum('full_time', 'part_time', name='teachertypeenum'), nullable=False),
    sa.Column('present_in', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('transports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vechicle_name', sa.String(length=50), nullable=False),
    sa.Column('vechicle_number', sa.String(length=50), nullable=False),
    sa.Column('driver_name', sa.String(length=100), nullable=False),
    sa.Column('phone_no', sa.String(length=20), nullable=False),
    sa.Column('duty_start_time', sa.Time(), nullable=False),
    sa.Column('duty_end_time', sa.Time(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transports_id'), 'transports', ['id'], unique=False)
    op.create_table('class_assigned_teachers',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('teacher_id', sa.String(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], )
    )
    op.create_table('class_extra_curricular',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['extra_curricular_activities.id'], ),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], )
    )
    op.create_table('class_optional_subjects',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('class_id', 'subject_id')
    )
    op.create_table('class_section',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], )
    )
    op.create_table('class_subjects',
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], )
    )
    op.create_table('drop_stops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('stop_name', sa.String(length=100), nullable=False),
    sa.Column('stop_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['transport_id'], ['transports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drop_stops_id'), 'drop_stops', ['id'], unique=False)
    op.create_table('pickup_stops',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transport_id', sa.Integer(), nullable=False),
    sa.Column('stop_name', sa.String(length=100), nullable=False),
    sa.Column('stop_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['transport_id'], ['transports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pickup_stops_id'), 'pickup_stops', ['id'], unique=False)
    op.create_table('school_margin_configuration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('credit_configuration_id', sa.Integer(), nullable=True),
    sa.Column('margin_value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['credit_configuration_id'], ['credit_configuration.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_school_margin_configuration_id'), 'school_margin_configuration', ['id'], unique=False)
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('roll_no', sa.Integer(), nullable=False),
    sa.Column('is_transport', sa.Boolean(), nullable=True),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['transports.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_students_id'), 'students', ['id'], unique=False)
    op.create_table('teacher_class_section_subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.String(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'class_id', 'section_id', 'subject_id', name='unique_teacher_assignment')
    )
    op.create_index(op.f('ix_teacher_class_section_subjects_id'), 'teacher_class_section_subjects', ['id'], unique=False)
    op.create_table('timetable_days',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('day', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', name='weekday'), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('teachers_id', sa.String(), nullable=True),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=1), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['class_id'], ['classes.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teachers_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'subject_id', 'date', name='uq_student_attendance'),
    sa.UniqueConstraint('teachers_id', 'subject_id', 'class_id', 'section_id', 'date', name='uq_teacher_attendance')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('parents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_name', sa.String(length=100), nullable=False),
    sa.Column('relation', sa.String(length=50), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('occupation', sa.String(length=100), nullable=True),
    sa.Column('organization', sa.String(length=150), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('student_id')
    )
    op.create_index(op.f('ix_parents_id'), 'parents', ['id'], unique=False)
    op.create_table('permanent_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('enter_pin', sa.String(length=10), nullable=False),
    sa.Column('division', sa.String(length=100), nullable=True),
    sa.Column('district', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('building', sa.String(length=150), nullable=True),
    sa.Column('house_no', sa.String(length=50), nullable=True),
    sa.Column('floor_name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    op.create_index(op.f('ix_permanent_addresses_id'), 'permanent_addresses', ['id'], unique=False)
    op.create_table('present_addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_this_permanent_as_well', sa.Boolean(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('enter_pin', sa.String(length=10), nullable=False),
    sa.Column('division', sa.String(length=100), nullable=True),
    sa.Column('district', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('building', sa.String(length=150), nullable=True),
    sa.Column('house_no', sa.String(length=50), nullable=True),
    sa.Column('floor_name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id')
    )
    op.create_index(op.f('ix_present_addresses_id'), 'present_addresses', ['id'], unique=False)
    op.create_table('timetable_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.String(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['day_id'], ['timetable_days.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('timetable_periods')
    op.drop_index(op.f('ix_present_addresses_id'), table_name='present_addresses')
    op.drop_table('present_addresses')
    op.drop_index(op.f('ix_permanent_addresses_id'), table_name='permanent_addresses')
    op.drop_table('permanent_addresses')
    op.drop_index(op.f('ix_parents_id'), table_name='parents')
    op.drop_table('parents')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_table('timetable_days')
    op.drop_index(op.f('ix_teacher_class_section_subjects_id'), table_name='teacher_class_section_subjects')
    op.drop_table('teacher_class_section_subjects')
    op.drop_index(op.f('ix_students_id'), table_name='students')
    op.drop_table('students')
    op.drop_index(op.f('ix_school_margin_configuration_id'), table_name='school_margin_configuration')
    op.drop_table('school_margin_configuration')
    op.drop_index(op.f('ix_pickup_stops_id'), table_name='pickup_stops')
    op.drop_table('pickup_stops')
    op.drop_index(op.f('ix_drop_stops_id'), table_name='drop_stops')
    op.drop_table('drop_stops')
    op.drop_table('class_subjects')
    op.drop_table('class_section')
    op.drop_table('class_optional_subjects')
    op.drop_table('class_extra_curricular')
    op.drop_table('class_assigned_teachers')
    op.drop_index(op.f('ix_transports_id'), table_name='transports')
    op.drop_table('transports')
    op.drop_table('teachers')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_sections_id'), table_name='sections')
    op.drop_table('sections')
    op.drop_index(op.f('ix_extra_curricular_activities_id'), table_name='extra_curricular_activities')
    op.drop_table('extra_curricular_activities')
    op.drop_index(op.f('ix_credit_master_id'), table_name='credit_master')
    op.drop_table('credit_master')
    op.drop_index(op.f('ix_classes_id'), table_name='classes')
    op.drop_table('classes')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('schools')
    op.drop_index(op.f('ix_otps_id'), table_name='otps')
    op.drop_table('otps')
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    op.drop_index('uq_school_name_location', table_name='users', postgresql_where=sa.text("role = 'SCHOOL'"))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_templates_id'), table_name='templates')
    op.drop_table('templates')
    op.drop_index(op.f('ix_credit_configuration_id'), table_name='credit_configuration')
    op.drop_table('credit_configuration')
    op.drop_index(op.f('ix_account_configuration_id'), table_name='account_configuration')
    op.drop_table('account_configuration')
    # ### end Alembic commands ###
