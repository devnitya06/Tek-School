"""Initial migration

Revision ID: 962f04cb3206
Revises: 
Create Date: 2025-05-02 18:44:48.304586

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '962f04cb3206'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('context', sa.String(), nullable=False),
    sa.Column('body', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_templates_id'), 'templates', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'SCHOOL', 'TEACHER', 'STUDENT', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index('uq_school_name_location', 'users', ['name', 'location'], unique=True, postgresql_where=sa.text("role = 'SCHOOL'"))
    op.create_table('otps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otps_id'), 'otps', ['id'], unique=False)
    op.create_table('schools',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('school_name', sa.String(), nullable=False),
    sa.Column('school_type', sa.Enum('PVT', 'GOVT', 'SEMI_GOVT', 'INTERNATIONAL', name='schooltype'), nullable=True),
    sa.Column('school_medium', sa.Enum('ENGLISH', 'HINDI', 'BILINGUAL', 'OTHER', name='schoolmedium'), nullable=True),
    sa.Column('school_board', sa.Enum('CBSE', 'ICSE', 'STATE', 'IB', 'OTHER', name='schoolboard'), nullable=True),
    sa.Column('establishment_year', sa.Integer(), nullable=True),
    sa.Column('pin_code', sa.String(length=10), nullable=True),
    sa.Column('block_division', sa.String(), nullable=True),
    sa.Column('district', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('school_email', sa.String(), nullable=False),
    sa.Column('school_phone', sa.String(length=15), nullable=False),
    sa.Column('school_alt_phone', sa.String(length=15), nullable=True),
    sa.Column('school_website', sa.String(), nullable=True),
    sa.Column('principal_name', sa.String(), nullable=True),
    sa.Column('principal_designation', sa.String(), nullable=True),
    sa.Column('principal_email', sa.String(), nullable=True),
    sa.Column('principal_phone', sa.String(length=15), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=False)
    op.create_index(op.f('ix_tokens_token'), 'tokens', ['token'], unique=True)
    op.create_table('teachers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('highest_qualification', sa.String(), nullable=False),
    sa.Column('university', sa.String(), nullable=False),
    sa.Column('phone', sa.String(length=10), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('teacher_in_classes', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('subjects', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('start_duty', sa.Time(), nullable=False),
    sa.Column('end_duty', sa.Time(), nullable=False),
    sa.Column('teacher_type', sa.Enum('full_time', 'part_time', name='teachertypeenum'), nullable=False),
    sa.Column('present_in', postgresql.ARRAY(sa.String()), nullable=False),
    sa.Column('school_id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teachers')
    op.drop_index(op.f('ix_tokens_token'), table_name='tokens')
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_table('schools')
    op.drop_index(op.f('ix_otps_id'), table_name='otps')
    op.drop_table('otps')
    op.drop_index('uq_school_name_location', table_name='users', postgresql_where=sa.text("role = 'SCHOOL'"))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_templates_id'), table_name='templates')
    op.drop_table('templates')
    # ### end Alembic commands ###
